name: "relational-database-app-kt-plugin"
description: Configure database connection to a relational database through supported drivers (MariaDB, MySQL, PostgreSQL) and optionally migration during application startup
types:
  - app
languages:
  - "kotlin"
tags:
  - "relational-database"
  - "migration"
  - "flyway"
  - "liquibase"
inputs:
  - label: "Which database would you like to use?"
    type: text
    name: "dbms"
    default: "PostgreSQL"
    items:
      - "MariaDB"
      - "MySQL"
      - "PostgreSQL"

  - label: "Which migration tool would you like to use with this datasource?"
    type: "text"
    name: "migration_tool"
    default: "None"
    items:
      - "Flyway"
      - "Liquibase"
      - "None"

hooks:
  - type: edit
    trigger: after-render
    path: infra/src/main/kotlin/{{project_group_id|group_id_folder}}/{{project_name|to_camel}}CdkStack.kt
    changes:
      - search:
          pattern: 'init\s?{'
          insert-after:
            value: "        val rdsNestedStack = RdsNestedStack(this, \"{{project_name|to_camel}}RdsNestedStack\", stageObject)\n"
          when:
            not-exists: 'val rdsNestedStack = RdsNestedStack(this, "{{project_name|to_camel}}RdsNestedStack", stageObject)'
      - search:
          string: 'val accountRole = cluster.addServiceAccount("account", accountOptions).role'
          insert-after:
            value: "        rdsNestedStack.secret.grantRead(accountRole)\n"
          when:
            not-exists: 'rdsNestedStack.secret.grantRead(accountRole)'
